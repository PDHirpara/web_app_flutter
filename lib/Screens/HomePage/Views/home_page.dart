import 'package:connectivity_plus/connectivity_plus.dart';import 'package:flutter/material.dart';import 'package:mirror_wall/Screens/HomePage/Model/model.dart';import 'package:provider/provider.dart';import 'package:flutter_inappwebview/flutter_inappwebview.dart';import '../../../Utils/list.dart';import '../Provider/provider.dart';class HomePage extends StatefulWidget {  const HomePage({super.key});  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  late InAppWebViewController? inAppWebViewController;  late PullToRefreshController pullToRefreshController;  Connectivity connectivity = Connectivity();  void initState() {// TODO: implement initState    super.initState;    pullToRefreshController = PullToRefreshController(      options: PullToRefreshOptions(        color: Colors.black,        enabled: true,      ),      onRefresh: inAppWebViewController?.reload();    );  }  @override  Widget build(BuildContext context) {    Map<String, dynamic> engine =    ModalRoute.of(context)!.settings.arguments as Map<String, dynamic>;    return SafeArea(      child: Scaffold(        appBar: AppBar(          title: const Text("My Browser"),          titleTextStyle: const TextStyle(              fontWeight: FontWeight.bold, color: Colors.black, fontSize: 25),          centerTitle: true,          actions: [            PopupMenuButton<MenuItem>(              itemBuilder: (BuildContext context) {                return Provider.of<MenuProvider>(context, listen: false)                    .menuItems                    .map((MenuItem item) {                  return PopupMenuItem<MenuItem>(                    value: item,                    // child: Text(item.title),                    child: ListTile(                      leading: Icon(item.icon),                      title: Text(item.title),                    ),                  );                }).toList();              },              onSelected: (MenuItem item) {                item.onTap();              },            ),          ],        ),        body: Column(          children: [            StreamBuilder(              stream: Connectivity().onConnectivityChanged,              builder: (context, AsyncSnapshot<ConnectivityResult> snapshot) =>                  (snapshot.data == ConnectivityResult.mobile)                      ? const Expanded(                          flex: 8,                          child: Center(                            child: Column(                              crossAxisAlignment: CrossAxisAlignment.center,                              mainAxisAlignment: MainAxisAlignment.center,                              children: [                                CircularProgressIndicator(),                                SizedBox(                                  height: 10,                                ),                                Text("Check Internet Connection..."),                                SizedBox(                                  height: 10,                                ),                              ],                            ),                          ),                        )                      : InAppWebView(                    pullToRefreshController: PullToRefreshController(),                    initialUrlRequest: URLRequest(url: Uri.parse("uri")),                    onWebViewCreated: (InAppWebViewController controller){                      inAppWebViewController=controller;                    },                  )            ),            // const Spacer(),            Expanded(              child: Padding(                padding: const EdgeInsets.only(                  right: 8,                  left: 8,                  bottom: 8,                ),                child: TextField(                  decoration: InputDecoration(                    suffixIcon: const Icon(Icons.search),                    hintText: "Search or type web address",                    border: OutlineInputBorder(                      borderSide: const BorderSide(width: 2),                      borderRadius: BorderRadius.circular(5),                    ),                  ),                ),              ),            ),          ],        ),        bottomNavigationBar: SizedBox(          height: MediaQuery.of(context).size.height * 0.075,          width: double.infinity,          child: Row(            mainAxisAlignment: MainAxisAlignment.spaceAround,            crossAxisAlignment: CrossAxisAlignment.center,            children: [              IconButton(                onPressed: () async {        await inAppWebViewController?.loadUrl(        urlRequest: URLRequest(        url: Uri.parse(engine['url']),        ),        );        },                icon: const Icon(                  Icons.home,                ),              ),              IconButton(                onPressed: () {},                icon: const Icon(                  Icons.bookmark_add_outlined,                ),              ),              IconButton(                onPressed: () {},                icon: const Icon(                  Icons.arrow_back_ios,                ),              ),              IconButton(                onPressed: () {},                icon: const Icon(                  Icons.refresh,                ),              ),              IconButton(                onPressed: () {},                icon: const Icon(                  Icons.arrow_forward_ios,                ),              ),            ],          ),        ),      ),    );  }}